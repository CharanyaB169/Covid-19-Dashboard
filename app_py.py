# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wmgLGfY-DViq5dxpUlo3Be0_mxHQGlfW
"""

pip install plotly dash pandas

#Interactive dashboard

import pandas as pd
from dash import Dash, dcc, html
from dash.dependencies import Input, Output
import plotly.express as px
import plotly.graph_objects as go

# Load your dataset
df = pd.read_csv("India_COVID19_Statewise_Summary_2020_2023.csv")

app = Dash(__name__)
app.title = "India COVID-19 Dashboard"

app.layout = html.Div([
    html.Div([
        html.H2("Filters", style={'text-align': 'center'}),
        dcc.Dropdown(
            id='state-filter',
            options=[{'label': s, 'value': s} for s in df['State'].unique()],
            value='Maharashtra',
            clearable=False
        ),
    ], style={'width': '20%', 'float': 'left', 'padding': '20px', 'background-color': '#f4f4f4'}),
])

html.Div([
        html.H1("India COVID-19 Analytics Dashboard", style={'text-align': 'center'}),

        # Time Series
        dcc.Graph(id='time-series'),

        # Scatter Plot
        dcc.Graph(id='scatter-plot'),

        # Correlation Heatmap
        dcc.Graph(id='correlation-heatmap'),

        # Geo Map (using latitude-longitude for states)
        dcc.Graph(id='geo-map')
    ], style={'width': '75%', 'float': 'right', 'padding': '20px'})

@app.callback(
    [Output('time-series', 'figure'),
     Output('scatter-plot', 'figure'),
     Output('correlation-heatmap', 'figure'),
     Output('geo-map', 'figure')],
    [Input('state-filter', 'value'),
     Input('date-range', 'start_date'),
     Input('date-range', 'end_date')]
)
def update_dashboard(selected_state, start_date, end_date):
    dff = df[(df['State'] == selected_state) &
             (df['Date'] >= start_date) &
             (df['Date'] <= end_date)]

    # --- Time Series Plot ---
    fig_time = px.line(
        dff, x='Date', y='Total Cases', title=f'Total Cases Over Time in {selected_state}'
    )
    fig_time.update_xaxes(rangeslider_visible=True)

    # --- Scatter Plot ---
    fig_scatter = px.scatter(
        dff, x='Total Vaccinations', y='Total Cases',
        hover_data=['Total Deaths', 'Total Recoveries'],
        title='Vaccinations vs Cases'
    )

    # --- Correlation Matrix ---
    corr = dff[['Total Cases', 'Total Deaths', 'Total Recoveries', 'Total Vaccinations']].corr()
    fig_corr = px.imshow(corr, text_auto=True, title="Correlation Heatmap")

    # --- Geo Map ---
    # Approximate coordinates for some states (sample)
    coords = {
        "Maharashtra": [19.75, 75.71], "Kerala": [10.85, 76.27], "Delhi": [28.61, 77.23],
        "Karnataka": [15.32, 75.71], "Tamil Nadu": [11.12, 78.65]
    }
    df_geo = pd.DataFrame([(k, *v) for k, v in coords.items()], columns=["State", "Lat", "Lon"])
    df_geo["Cases"] = [df[df["State"] == s]["Total Cases"].max() for s in df_geo["State"]]

    fig_map = px.scatter_geo(
        df_geo, lat="Lat", lon="Lon", text="State", size="Cases",
        title="COVID-19 Total Cases by State (Geo Map)",
        projection="natural earth"
    )

    return fig_time, fig_scatter, fig_corr, fig_map

if __name__ == '__main__':
    app.run(debug=True)